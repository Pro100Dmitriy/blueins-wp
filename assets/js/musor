// function blueins_more_posts(){
//     const ajax_url = woocommerce_params.ajax_url;
//     let category_id = blueins_get_category();
//     let min = String( blueins_get_min() );
//     let max = String( blueins_get_max() );
//     let order = String( blueins_get_order() );

//     let query = misha_loadmore_params.posts
//     let page = String( misha_loadmore_params.current_page )
//     let max_page = String( misha_loadmore_params.max_page )

//     console.log(page, max_page, min, max, category_id, order)

//     let preloader = `
//                     <div class="button-preloader">
//                         <svg version="1.1" id="L5" width="60px" height="60px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
//                             viewBox="0 0 100 100" enable-background="new 0 0 0 0" xml:space="preserve">
//                             <circle fill="#17191A" stroke="none" cx="6" cy="50" r="6">
//                             <animateTransform 
//                                 attributeName="transform" 
//                                 dur="1s" 
//                                 type="translate" 
//                                 values="0 15 ; 0 -15; 0 15" 
//                                 repeatCount="indefinite" 
//                                 begin="0.1"/>
//                             </circle>
//                             <circle fill="#17191A" stroke="none" cx="30" cy="50" r="6">
//                             <animateTransform 
//                                 attributeName="transform" 
//                                 dur="1s" 
//                                 type="translate" 
//                                 values="0 10 ; 0 -10; 0 10" 
//                                 repeatCount="indefinite" 
//                                 begin="0.2"/>
//                             </circle>
//                             <circle fill="#17191A" stroke="none" cx="54" cy="50" r="6">
//                             <animateTransform 
//                                 attributeName="transform" 
//                                 dur="1s" 
//                                 type="translate" 
//                                 values="0 5 ; 0 -5; 0 5" 
//                                 repeatCount="indefinite" 
//                                 begin="0.3"/>
//                             </circle>
//                         </svg>
//                     </div>
//     `

//     function loadMore(method, url, action, category, min, max, order, page){
//         return new Promise( (resolve, reject) => {
//             const xhr = new XMLHttpRequest();

//             xhr.open(method, url + `?action=${action}&category=${category}&min=${min}&max=${max}&order=${order}&paged=${page}`);
//             xhr.onloadstart = () => {
//                 let loadMore = document.querySelector('#blueins-load_more')
//                 loadMore.insertAdjacentHTML('beforebegin', preloader)
//                 loadMore.style = 'display: none'
//             }
//             xhr.onload = () => {
//                 resolve( xhr.response )
//             }
//             xhr.onerror = () => {
//                 reject( xhr.response )
//             }
//             xhr.send()
//         })
//     }

//     loadMore('GET', ajax_url, 'blueins_filter', category_id, min, max, order, page)
//         .then( data => {
//             if( data ) {
//                 let loadMore = document.querySelector('#blueins-load_more')
//                 document.querySelector('.button-preloader').remove()
//                 loadMore.style = 'display: block'

//                 misha_loadmore_params.current_page++;
//                 document.querySelector('#products__list-container').insertAdjacentHTML('beforeend', data)

//                 if ( misha_loadmore_params.current_page == misha_loadmore_params.max_page ){
//                     document.querySelector('#blueins-load_more').classList.add('blueins-load_more__hidden');
//                 } 
//             } else {
//                 //document.querySelector('#blueins-load_more').classList.add('blueins-load_more__hidden');
//             }
//         } )
//         .catch( error => {
//             document.querySelector('#products__list-container').innerHTML = 'error'
//         } )

// }




/*****  Filter  *****/
// function blueins_get_posts(numberPage){

//     // Prepare Data
//     const ajax_url = woocommerce_params.ajax_url;
//     let category_id = blueins_get_category();
//     let min = Number( blueins_get_min() );
//     let max = Number( blueins_get_max() );
//     let order = String( blueins_get_order() );
//     let taxonomy = blu_loadmore_param.taxonomy ? String( blu_loadmore_param.taxonomy ) : 0;
//     let preloader = `
//         <div class="preloader">
//             <svg version="1.1" id="L5" width="60px" height="60px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
//                 viewBox="0 0 100 100" enable-background="new 0 0 0 0" xml:space="preserve">
//                 <circle fill="#17191A" stroke="none" cx="6" cy="50" r="6">
//                 <animateTransform 
//                     attributeName="transform" 
//                     dur="1s" 
//                     type="translate" 
//                     values="0 15 ; 0 -15; 0 15" 
//                     repeatCount="indefinite" 
//                     begin="0.1"/>
//                 </circle>
//                 <circle fill="#17191A" stroke="none" cx="30" cy="50" r="6">
//                 <animateTransform 
//                     attributeName="transform" 
//                     dur="1s" 
//                     type="translate" 
//                     values="0 10 ; 0 -10; 0 10" 
//                     repeatCount="indefinite" 
//                     begin="0.2"/>
//                 </circle>
//                 <circle fill="#17191A" stroke="none" cx="54" cy="50" r="6">
//                 <animateTransform 
//                     attributeName="transform" 
//                     dur="1s" 
//                     type="translate" 
//                     values="0 5 ; 0 -5; 0 5" 
//                     repeatCount="indefinite" 
//                     begin="0.3"/>
//                 </circle>
//             </svg>
//         </div>
//     `

//     function removeActiveClass(e){
//         e.preventDefault();
//         if( e.target.parentNode.hasAttribute('data-cat-id') ){
//             let removeClassFrom = document.querySelector(`.cat-item-${e.target.parentNode.getAttribute('data-cat-id')}`)
//             removeClassFrom.classList.remove('cart-item-selected')
//             removeClassFrom.parentNode.classList.remove('ul-selected')
//         }
//         if( e.target.parentNode.hasAttribute('data-cat-min') ){
//             sliderEl1.cahngeMinPosition( sliderEl1.publickMinPrice )
//         }
//         if( e.target.parentNode.hasAttribute('data-cat-max') ){
//             sliderEl1.cahngeMaxPosition( sliderEl1.publickMaxPrice )
//         }
//         if( e.target.parentNode.hasAttribute('data-remove-all') ){
//             let activeFiltersContainer = document.querySelector('.product-categories-active');
//             for( node of activeFiltersContainer.children ){
//                 if( node.hasAttribute('data-cat-id') ){
//                     let removeClassFrom = document.querySelector(`.cat-item-${node.getAttribute('data-cat-id')}`)
//                     removeClassFrom.classList.remove('cart-item-selected')
//                     removeClassFrom.parentNode.classList.remove('ul-selected')
//                 }
//                 if( node.hasAttribute('data-cat-min') ){
//                     sliderEl1.cahngeMinPosition( sliderEl1.publickMinPrice )
//                 }
//                 if( node.hasAttribute('data-cat-max') ){
//                     sliderEl1.cahngeMaxPosition( sliderEl1.publickMaxPrice )
//                 }
//             }
//         }
//         blueins_get_posts()
//     }

//     function actFilters(category){
//         if(category.length == 0 && min == sliderEl1.publickMinPrice && max == sliderEl1.publickMaxPrice){
//             document.querySelector('#activeFilters').classList.add('activeFilters-hidden')
//         }else{
//             document.querySelector('#activeFilters').classList.remove('activeFilters-hidden')
//         }
//         let filterList = document.querySelector('#activeFilters').querySelector('.product-categories-active')

//         let activeCat = category.map( item => {
//             let obj = document.querySelector(`.cat-item-${item}`)
//             return obj.innerHTML
//         } )

//         let template = activeCat.map( (item, index)=> `<li data-cat-id="${category[index]}" class="cat-item-active cart-item-selected-active">${item}</li>`)
//         if( min != sliderEl1.publickMinPrice ){
//             template.push(`<li data-cat-min="${min}" class="cat-item-active cart-item-selected-active"><a href="#">Мин: ${min}</a></li>`)   
//         }
//         if( max != sliderEl1.publickMaxPrice ){
//             template.push(`<li data-cat-max="${max}" class="cat-item-active cart-item-selected-active"><a href="#">Макс: ${max}</a></li>`)
//         }
//         template.push(`<li data-remove-all class="cat-item-active cart-item-selected-active cart-item-remove-all"><a href="#">Очистить фильтры</a></li>`)
//         filterList.innerHTML = template.join('');

//         filterList.querySelectorAll('.cat-item-active').forEach( item => item.addEventListener( 'click', removeActiveClass ) )
//     }

//     function sendRquest(method, url, action, category, min, max, order, tax){
//         return new Promise( (resolve, reject) => {
//             const xhr = new XMLHttpRequest();

//             xhr.open(method, url + `?action=${action}&category=${category}&min=${min}&max=${max}&order=${order}&taxonomyID=${tax}`);
//             xhr.onloadstart = () => {
//                 //add  active filters
//                 actFilters(category);

//                 document.querySelector('.products').insertAdjacentHTML('afterbegin', preloader);
//                 let filter = document.querySelector('#blueins-filters-block').getBoundingClientRect()
//                 document.querySelector('#header__bottom-cover').classList.add('header__bottom-fixed')
//                 $('html, body').animate({scrollTop: window.pageYOffset + filter.y - 76}, 1000);
//             }
//             xhr.onload = () => {
//                 resolve( xhr.response )
//             }
//             xhr.onerror = () => {
//                 reject( xhr.response )
//             }
//             xhr.send()
//         })
//     }

//     sendRquest('GET', ajax_url, 'loadmore', category_id, String(min), String(max), String(order), taxonomy)
//         .then( data => {
//             document.querySelector('#products__list-container').innerHTML = data
//             document.querySelector('.preloader').remove()
//             blu_loadmore_param.current_page = 1
//             //console.log(blu_loadmore_param.max_page, blu_loadmore_param.current_page)

//             let regx = /big-products__list__item/g
//             let post_count = data.match(regx)
//             let posts_per_page = Number(blu_loadmore_param.posts_per_page)

//             if ( blu_loadmore_param.current_page == blu_loadmore_param.max_page || post_count.length < posts_per_page ){
//                 document.querySelector('#blueins-load_more').classList.add('blueins-load_more__hidden');
//             }else{
//                 document.querySelector('#blueins-load_more').classList.remove('blueins-load_more__hidden');
//             }
//         } )
//         .catch( error => {
//             document.querySelector('#products__list-container').innerHTML = `<div class="products__list__img-error"><img src="${blu_loadmore_param.theme_url}/assets/img/Robot.svg" width="500px" height="500px"></div>`
//         } )

// }












import { filterSendRequest } from "../utils"  
import { _ } from "../price-slider"

/*****  Load More  *****/
export function blueins_more_posts_loadmore(){
     // Consts
     const product_container = document.querySelector('#products__list-container')
    
     // Prepare Data
    const ajax_url = woocommerce_params.ajax_url
    let page = blu_loadmore_param.current_page
    let category_id = Number( _.blueins_get_category() )
    let min = String( _.blueins_get_min() )
    let max = String( _.blueins_get_max() )
    let order = String( _.blueins_get_order() )
    let taxonomy = blu_loadmore_param.taxonomy ? String( blu_loadmore_param.taxonomy ) : 0

    //console.log( category_id, min, max, order, taxonomy );
    
    let preloader = `
                    <div class="button-preloader">
                        <svg version="1.1" id="L5" width="60px" height="60px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                            viewBox="0 0 100 100" enable-background="new 0 0 0 0" xml:space="preserve">
                            <circle fill="#17191A" stroke="none" cx="6" cy="50" r="6">
                            <animateTransform 
                                attributeName="transform" 
                                dur="1s" 
                                type="translate" 
                                values="0 15 ; 0 -15; 0 15" 
                                repeatCount="indefinite" 
                                begin="0.1"/>
                            </circle>
                            <circle fill="#17191A" stroke="none" cx="30" cy="50" r="6">
                            <animateTransform 
                                attributeName="transform" 
                                dur="1s" 
                                type="translate" 
                                values="0 10 ; 0 -10; 0 10" 
                                repeatCount="indefinite" 
                                begin="0.2"/>
                            </circle>
                            <circle fill="#17191A" stroke="none" cx="54" cy="50" r="6">
                            <animateTransform 
                                attributeName="transform" 
                                dur="1s" 
                                type="translate" 
                                values="0 5 ; 0 -5; 0 5" 
                                repeatCount="indefinite" 
                                begin="0.3"/>
                            </circle>
                        </svg>
                    </div>
    `

    function loadMore(method, url, action, page, category, min, max, order, tax){
        return new Promise( (resolve, reject) => {
            const xhr = new XMLHttpRequest();

            xhr.open(method, url + `?action=${action}&paged=${page}&category=${category}&min=${min}&max=${max}&order=${order}&taxonomyID=${tax}`);
            xhr.onloadstart = () => {
                let loadMore = document.querySelector('#blueins-load_more')
                loadMore.insertAdjacentHTML('beforebegin', preloader)
                loadMore.style = 'display: none'
            }
            xhr.onload = () => {
                resolve( xhr.response )
            }
            xhr.onerror = () => {
                reject( xhr.response )
            }
            xhr.send()
        })
    }

    // loadMore('GET', ajax_url, 'loadmore', String(page), Number(category_id), String(min), String(max), String(order), taxonomy)
    //     .then( data => {
    //         if( data ) {
    //             let loadMore = document.querySelector('#blueins-load_more')
    //             document.querySelector('.button-preloader').remove()
    //             loadMore.style = 'display: block'

    //             blu_loadmore_param.current_page++;
    //             product_container.insertAdjacentHTML('beforeend', data)

    //             if ( blu_loadmore_param.current_page == blu_loadmore_param.max_page ){
    //                 document.querySelector('#blueins-load_more').classList.add('blueins-load_more__hidden');
    //             } 
    //         } else {
    //             //document.querySelector('#blueins-load_more').classList.add('blueins-load_more__hidden');
    //         }
    //     } )
    //     .catch( error => {
    //         product_container.innerHTML = `
    //             <div class="products__list__img-error"><img src="${blu_loadmore_param.theme_url}/assets/img/Robot.svg" width="500px" height="500px"></div>
    //         `
    //     } )

    filterSendRequest( {
        method: 'GET',
        url: ajax_url,
        action: 'loadmore',
        data: {
            paged: page,
            category: category_id,
            min,
            max,
            order,
            taxonomyID: taxonomy
        },
        onloadstart_callback(){
            let loadMore = document.querySelector('#blueins-load_more')
            loadMore.insertAdjacentHTML('beforebegin', preloader)
            loadMore.style = 'display: none'
        }
    } )
    .then( resolve => {
        if( resolve ) {
            let loadMore = document.querySelector('#blueins-load_more')
            document.querySelector('.button-preloader').remove()
            loadMore.style = 'display: block'

            blu_loadmore_param.current_page++;
            product_container.insertAdjacentHTML('beforeend', resolve)

            if ( blu_loadmore_param.current_page == blu_loadmore_param.max_page ){
                document.querySelector('#blueins-load_more').classList.add('blueins-load_more__hidden');
            } 
        } else {
            //document.querySelector('#blueins-load_more').classList.add('blueins-load_more__hidden');
        }
    } )
    .catch( reject => {
        console.log( reject )
        product_container.innerHTML = `
            <div class="products__list__img-error"><img src="${blu_loadmore_param.theme_url}/assets/img/Robot.svg" width="500px" height="500px"></div>
        `
    } )

}


// function blueins_active_filter(){
//     let filterList = document.querySelector('.customs__list');
//     let activeFilters = `
//         <li id="activeFilters" class="customs__list__item activeFilters-hidden">
//             <div class="customs__list__item__title">
//                 <h6 class="groupe-cust-title">Активные фильтры</h6>
//             </div>
//             <div class="item__nav">
//                 <ul class="product-categories-active ul-selected-active"></ul>
//             </div>
//         </li>
//     `;
//     filterList.insertAdjacentHTML('afterbegin', activeFilters);
// }

// blueins_active_filter()







    // function removeActiveClass(e){
    //     e.preventDefault();
    //     if( e.target.parentNode.hasAttribute('data-cat-id') ){
    //         let removeClassFrom = document.querySelector(`.cat-item-${e.target.parentNode.getAttribute('data-cat-id')}`)
    //         removeClassFrom.classList.remove('cart-item-selected')
    //         removeClassFrom.parentNode.classList.remove('ul-selected')
    //     }
    //     if( e.target.parentNode.hasAttribute('data-cat-min') ){
    //         sliderEl1.cahngeMinPosition( sliderEl1.publickMinPrice )
    //     }
    //     if( e.target.parentNode.hasAttribute('data-cat-max') ){
    //         sliderEl1.cahngeMaxPosition( sliderEl1.publickMaxPrice )
    //     }
    //     if( e.target.parentNode.hasAttribute('data-remove-all') ){
    //         let activeFiltersContainer = document.querySelector('.product-categories-active');
    //         for( node of activeFiltersContainer.children ){
    //             if( node.hasAttribute('data-cat-id') ){
    //                 let removeClassFrom = document.querySelector(`.cat-item-${node.getAttribute('data-cat-id')}`)
    //                 removeClassFrom.classList.remove('cart-item-selected')
    //                 removeClassFrom.parentNode.classList.remove('ul-selected')
    //             }
    //             if( node.hasAttribute('data-cat-min') ){
    //                 sliderEl1.cahngeMinPosition( sliderEl1.publickMinPrice )
    //             }
    //             if( node.hasAttribute('data-cat-max') ){
    //                 sliderEl1.cahngeMaxPosition( sliderEl1.publickMaxPrice )
    //             }
    //         }
    //     }
    //     blueins_get_posts()
    // }
    
    // function actFilters(category){
    //     console.log(sliderEl1.publickMaxPrice, sliderEl1.publickMinPrice)
    //     let $activeFilters = document.querySelector('#activeFilters')
    //     if(category.length == 0 && min == sliderEl1.publickMinPrice && max == sliderEl1.publickMaxPrice){
    //         $activeFilters.classList.add('activeFilters-hidden')
    //     }else{
    //         $activeFilters.classList.remove('activeFilters-hidden')
    //     }
    //     let filterList = $activeFilters.querySelector('.product-categories-active')
    
    //     let activeCat = category.map( item => {
    //         let obj = document.querySelector(`.cat-item-${item}`)
    //         return obj.innerHTML
    //     } )
    
    //     let template = activeCat.map( (item, index)=> `<li data-cat-id="${category[index]}" class="cat-item-active cart-item-selected-active">${item}</li>`)
    //     if( min != sliderEl1.publickMinPrice ){
    //         template.push(`<li data-cat-min="${min}" class="cat-item-active cart-item-selected-active"><a href="#">Мин: ${min}</a></li>`)   
    //     }
    //     if( max != sliderEl1.publickMaxPrice ){
    //         template.push(`<li data-cat-max="${max}" class="cat-item-active cart-item-selected-active"><a href="#">Макс: ${max}</a></li>`)
    //     }
    //     template.push(`<li data-remove-all class="cat-item-active cart-item-selected-active cart-item-remove-all"><a href="#">Очистить фильтры</a></li>`)
    //     filterList.innerHTML = template.join('');
    
    //     filterList.querySelectorAll('.cat-item-active').forEach( item => item.addEventListener( 'click', removeActiveClass ) )
    // }

















    /**
 * ************************ Vaiable Colors Start ************************
 */

 function updateHTML( circleEl, childrenArr, optionsWoo, circle, nameHere, space ){

  for( let i=0; i < circle.length; i++ ){
      circle[i].classList.remove('element-select'); 
  }
  circleEl.classList.add('element-select');

  let circleElId = circleEl.getAttribute('id');

  let fullval = childrenArr.map( opt => {
      if( opt.value.slice( opt.value.indexOf('#') ) == circleElId ){
      return opt.value;
      }
  } );

  fullval = fullval.filter( optVal => {if( optVal != undefined ) return optVal } );
  $( optionsWoo ).val(fullval[0]).change();

  // Set Name Color
  let nameContainer = space.querySelector( `#${nameHere}` );
  nameContainer.innerHTML = fullval[0].slice( 0, fullval[0].indexOf('#') );

}

function updateIMG(targetEl){
  let activeID
  if( img_variation_src ){
      img_variation_src.forEach( item => {
      let harpIdex = item['id'].indexOf('#')
      if( item['id'].slice( harpIdex ) == targetEl ){
          activeID = item
      }
      })
  }

  let variation_slider = document.getElementById('blu-variations-slider')
  let firstElement = variation_slider.children[0]
  let firstURL = firstElement.children[0]
  let firstIMG = firstElement.querySelector('.wp-post-image')

  let variation_control_nav = document.querySelector('.flex-control-nav')
  let controlFirst_IMG = variation_control_nav.children[0].children[0]

  firstElement.setAttribute('data-thumb', activeID['data-thumb'])
  firstURL.setAttribute('href', activeID['data-src'])

  firstIMG.setAttribute('src', activeID['src'])
  firstIMG.setAttribute('data-src', activeID['data-src'])
  firstIMG.setAttribute('data-large_image', activeID['data-large_image'])
  firstIMG.setAttribute('srcset', activeID['srcset'])

  controlFirst_IMG.setAttribute('src', activeID['data-thumb'])
}

function createSquare( listArray, whereId, space ){
  let arraySquare = []

  listArray.forEach( (child, childIndex) => {
      if( childIndex != 0 ){
      let listContainer = space.querySelector( `#${whereId}` )

      let liElem = document.createElement('li')
      let spanElem = document.createElement('span')

      let razmerCod = child.value.slice( child.value.indexOf('#') )
      let razmerCodHTML = child.value.slice( child.value.indexOf('#') + 1 )
      let razmerName = child.value.slice( 0, child.value.indexOf('#') )

      spanElem.setAttribute('class', 'details-select-square')
      spanElem.setAttribute('id', razmerCod.trim());
      spanElem.textContent = razmerCodHTML

      liElem.setAttribute('class', 'details__razmer__list__item')
      liElem.setAttribute('name', razmerName)
      liElem.appendChild( spanElem )

      arraySquare.push( spanElem )
      listContainer.appendChild( liElem )
      }
  } )

  return arraySquare;
}

function createCircle( listArray, whereId, space ){
  let arratCircle = [];

  listArray.forEach( (child, childIndex, childArray)=>{

      if( childIndex != 0 ){
      let listContainer = space.querySelector( `#${whereId}` );

      let liElem = document.createElement('li');
      let spanElem = document.createElement('span');

      // Fint Color #Cod
      let colorCod = child.value.slice( child.value.indexOf('#') );
      let colorName = child.value.slice( 0, child.value.indexOf('#') );

      spanElem.setAttribute('class', 'details-select-circle');
      spanElem.setAttribute('style', `background: ${ colorCod.trim() }`);
      spanElem.setAttribute('id', colorCod.trim());

      liElem.setAttribute('class', 'details__colors__list__item');
      liElem.setAttribute('name', colorName);
      liElem.appendChild( spanElem );

      arratCircle.push( spanElem );
      listContainer.appendChild( liElem );
      }
      
  } );

  return arratCircle;
}

function createCircle2( listArray, whereId, space ){
  let arratCircle = [];

  listArray.forEach( (child, childIndex, childArray)=>{

      if( childIndex != 0 ){
      let listContainer = space.querySelector( `#${whereId}` );

      let liElem = document.createElement('li');
      let spanElem = document.createElement('span');

      // Fint Color #Cod
      console.log( child.innerHTML )
      let colorCod = child.innerHTML.slice( child.innerHTML.indexOf('#') );
      let colorName = child.innerHTML.slice( 0, child.innerHTML.indexOf('#') );
      console.log(colorCod, colorName)

      spanElem.setAttribute('class', 'details-select-circle');
      spanElem.setAttribute('style', `background: ${ colorCod.trim() }`);
      spanElem.setAttribute('id', colorCod.trim());

      liElem.setAttribute('class', 'details__colors__list__item');
      liElem.setAttribute('name', colorName);
      liElem.appendChild( spanElem );

      arratCircle.push( spanElem );
      listContainer.appendChild( liElem );
      }
      
  } );

  return arratCircle;
}

function productVariation( space ){

  let optionsProductCzvet = space.querySelector('[data-attribute_name="attribute_czvet"]')
  let optionsProductRazmer = space.querySelector('[data-attribute_name="attribute_razmer"]')
  let optionsProductPaRazmer = space.querySelector('[data-attribute_name="attribute_pa_razmer"]')
  let optionsProductPaCzvet = space.querySelector('[data-attribute_name="attribute_pa_czvet"]')

  if( optionsProductCzvet ){

      let childrenCzvet = [ ...optionsProductCzvet.children ]
      
      let circleCzvet = createCircle( childrenCzvet, 'setElementHere__czvet', space )
      
      updateHTML( circleCzvet[0], childrenCzvet, optionsProductCzvet, circleCzvet, 'setNameHere__czvet', space )

      circleCzvet.forEach( circleEl => {
      circleEl.addEventListener('click', (event)=>{
          event.preventDefault();
          let targetEl = event.target.getAttribute('id')

          updateHTML( circleEl, childrenCzvet, optionsProductCzvet, circleCzvet, 'setNameHere__czvet', space );
          updateIMG( targetEl );

      })
      })

  }
  if( optionsProductRazmer ){

      let childrenRazmer = [ ...optionsProductRazmer.children ]

      let squareRazmer = createSquare( childrenRazmer, 'setElementHere__razmer', space )

      updateHTML( squareRazmer[0], childrenRazmer, optionsProductRazmer, squareRazmer, 'setNameHere__razmer', space )

      squareRazmer.forEach( circleEl => {
      circleEl.addEventListener('click', (event)=>{
          event.preventDefault();

          updateHTML( circleEl, childrenRazmer, optionsProductRazmer, squareRazmer, 'setNameHere__razmer', space );

      })
      })

  }
  if( optionsProductPaRazmer ){

      let childrenRazmer = [ ...optionsProductPaRazmer.children ]

      let squareRazmer = createSquare( childrenRazmer, 'setElementHere__pa_razmer', space )

      updateHTML( squareRazmer[0], childrenRazmer, optionsProductPaRazmer, squareRazmer, 'setNameHere__pa_razmer', space )

      squareRazmer.forEach( circleEl => {
      circleEl.addEventListener('click', (event)=>{
          event.preventDefault();

          updateHTML( circleEl, childrenRazmer, optionsProductPaRazmer, squareRazmer, 'setNameHere__pa_razmer', space );

      })
      })

  }
  if( optionsProductPaCzvet ){
    
    let childrenPaCzvet = [ ...optionsProductPaCzvet.children ]
      
    let circleCzvet = createCircle2( childrenPaCzvet, 'setElementHere__pa_czvet', space )
    
    updateHTML( circleCzvet[0], childrenPaCzvet, optionsProductPaCzvet, circleCzvet, 'setNameHere__pa_czvet', space )

    circleCzvet.forEach( circleEl => {
    circleEl.addEventListener('click', (event)=>{
        event.preventDefault();
        let targetEl = event.target.getAttribute('id')

        updateHTML( circleEl, childrenPaCzvet, optionsProductPaCzvet, circleCzvet, 'setNameHere__pa_czvet', space );
        updateIMG( targetEl );

    })
    })

  }

}

document.addEventListener('DOMContentLoaded', event => {
  let $prod_info = document.querySelector('.information-product')
  if( $prod_info ){
    productVariation( $prod_info ) 
  }
})


/**
 * ************************ Vaiable Colors End ************************
 */